const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function resetToClean() {
    try {
        console.log('üßπ Starting database cleanup...');
        console.log('‚ö†Ô∏è  This will remove ALL data except admin account and regions!');

        // 1. Í¥ÄÎ†® Îç∞Ïù¥ÌÑ∞Îì§ÏùÑ Ïò¨Î∞îÎ•∏ ÏàúÏÑúÎ°ú ÏÇ≠Ï†ú (Ïô∏ÎûòÌÇ§ Ï†úÏïΩ Ï°∞Í±¥ Í≥†Î†§)
        console.log('üóëÔ∏è  Deleting disputes...');
        await prisma.dispute.deleteMany({});

        console.log('üóëÔ∏è  Deleting matches...');
        await prisma.match.deleteMany({});

        console.log('üóëÔ∏è  Deleting team join requests...');
        await prisma.teamJoinRequest.deleteMany({});

        console.log('üóëÔ∏è  Deleting team members...');
        await prisma.teamMember.deleteMany({});

        console.log('üóëÔ∏è  Deleting teams...');
        await prisma.team.deleteMany({});

        console.log('üóëÔ∏è  Deleting non-admin users...');
        // Í¥ÄÎ¶¨ÏûêÍ∞Ä ÏïÑÎãå Î™®Îì† ÏÇ¨Ïö©Ïûê ÏÇ≠Ï†ú
        const deletedUsers = await prisma.user.deleteMany({
            where: {
                isAdmin: false
            }
        });
        console.log(`   ‚úÖ Deleted ${deletedUsers.count} non-admin users`);

        // 2. Í¥ÄÎ¶¨Ïûê Í≥ÑÏ†ï Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ (ÌïÑÏöîÌïú Í≤ΩÏö∞)
        const adminExists = await prisma.user.findFirst({
            where: { isAdmin: true }
        });

        if (adminExists) {
            console.log('‚úÖ Admin account preserved');
        } else {
            console.log('‚ö†Ô∏è  No admin account found - will be created during next seed');
        }

        // 3. ÏßÄÏó≠ Îç∞Ïù¥ÌÑ∞Îäî Ïú†ÏßÄ (ÏÇ≠Ï†úÌïòÏßÄ ÏïäÏùå)
        const regionCount = await prisma.region.count();
        console.log(`‚úÖ ${regionCount} regions preserved`);

        console.log('');
        console.log('üéØ Database cleanup completed!');
        console.log('üìä Remaining data:');
        console.log(`   üë§ Admin users: ${adminExists ? 1 : 0}`);
        console.log(`   üìç Regions: ${regionCount}`);
        console.log(`   üèÜ Teams: 0`);
        console.log(`   ‚öΩ Matches: 0`);
        console.log('');
        console.log('üí° Run "npm run prisma:seed" to add fresh admin account and regions');

    } catch (error) {
        console.error('‚ùå Error during cleanup:', error);
        throw error;
    } finally {
        await prisma.$disconnect();
    }
}

// Ïä§ÌÅ¨Î¶ΩÌä∏ ÏßÅÏ†ë Ïã§Ìñâ Ïãú
if (require.main === module) {
    resetToClean()
        .then(() => {
            console.log('‚úÖ Cleanup completed successfully');
            process.exit(0);
        })
        .catch((error) => {
            console.error('‚ùå Cleanup failed:', error);
            process.exit(1);
        });
}

module.exports = { resetToClean };
